{"version":3,"sources":["Images/1.jpg","logo.svg","components/Navigation.js","components/Videos.js","Pages/Music.js","Pages/Tour.js","Pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","react_default","a","createElement","Fragment","className","react_router_dom","to","Component","Videos","id","Music","Tour","About","App","Navigation_Navigation","react_router","exact","path","class","Videos_Videos","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2GCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8LCGnBC,gMAOjB,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,KACLN,EAAAC,EAAAC,cAAA,gCAIRF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,KACLN,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,WACLN,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,UACLN,EAAAC,EAAAC,cAAA,oBAGJF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,WACLN,EAAAC,EAAAC,cAAA,+BA9BgBK,cCDnBC,mLAEjB,OACER,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKO,GAAG,SACNT,EAAAC,EAAAC,cAAA,KAAGE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,mBACAJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,OACAJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,kBAXwBG,aCAfG,0LAEjB,OACEV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOK,GAAG,uBAJIF,cCAdI,mLAEjB,OACEX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOK,GAAG,sBAHGF,aCAbK,mLAEjB,OACEZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOK,GAAG,sBAHIF,aCkCpBM,mLApBX,OACEb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACY,EAAD,MACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KAClBjB,EAAAC,EAAAC,cAAA,OAAMgB,MAAM,kBACVlB,EAAAC,EAAAC,cAACiB,EAAD,QAGFnB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOE,KAAK,SAASG,UAAWV,IAChCV,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOE,KAAK,QAAQG,UAAWT,IAC/BX,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOE,KAAK,SAASG,UAAWR,cAd1BL,aCFEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a3104d52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.aff2d89c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport {BrowserRouter, Link, Switch, Route} from 'react-router-dom';\n\nexport default class Navigation extends Component {\n  render() {\n      //Normal comment\n      //* Cool comment\n      //! Danger!\n      //? what is it\n      //TODO check this out\n    return (\n        <React.Fragment>\n            <nav>\n                <div className=\"logo\">\n                    <Link to='/'>\n                        <h1>Shaquille Murphy</h1>\n                    </Link>\n                </div>\n\n                <ul>\n                    <Link to=\"/\"> \n                        <li> Home </li>\n                    </Link>\n\n                    <Link to=\"/music/\">\n                        <li> Music </li>\n                    </Link>\n                    \n                    <Link to=\"/tour/\">\n                        <li>Tour </li>\n                    </Link>\n\n                    <Link to=\"/about/\"> \n                        <li>About </li>\n                    </Link> \n                </ul>\n            </nav>\n        </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Videos extends Component {\n  render() {\n    return (\n      <section>\n          <div id=\"album\">\n            <p className=\"line\"></p>\n            <br/>\n            <span className=\"release-date\">OUT SEP 7, 2019</span>\n            <br/>\n            <span className=\"album\">NEW</span>\n            <br/>\n            <span className=\"album\">ALBUM</span>\n          </div>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport HeroImg from '../Images/1.jpg';\nexport default class Music extends Component {\n  render() {\n    return (\n      <>\n      <div className=\"hero\" id=\"heroImage2\" >\n      </div>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Tour extends Component {\n  render() {\n    return (\n      <div className=\"hero\" id=\"heroImage4\" >\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div className=\"hero\" id=\"heroImage3\" >\n      </div>\n    )\n  }\n}\n","import React,{Component} from 'react';\nimport {BrowserRouter, Link, Switch, Route} from 'react-router-dom';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Navigation from '../src/components/Navigation';\nimport Videos from '../src/components/Videos';\nimport Music from '../src/Pages/Music';\nimport Tour from '../src/Pages/Tour';\nimport About from '../src/Pages/About';\nimport HeroImage from '../src/Images/1.jpg';\n\n\n\nclass App extends Component{\n  render(){\n    return (\n      <>\n      <BrowserRouter>\n        <Navigation/>\n          <Switch>\n            <Route exact path=\"/\">\n            <div  class=\"hero heroImage\">\n              <Videos/>\n              </div>\n            </Route>\n            <Route path=\"/music\" component={Music} />\n            <Route path=\"/tour\" component={Tour} />\n            <Route path=\"/about\" component={About} />\n          </Switch>\n      </BrowserRouter>\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}